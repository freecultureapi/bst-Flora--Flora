// freeculture.api
// have fun


//         __.....__
//      .'" _  o    "`.
//    .' O (_)     () o`.
//   .           O       .
//  . ()   o__...__    O  .
// . _.--"""       """--._ .
// :"                     ";
//  `-.__    :   :    __.-'
//      """-:   :-"""
//          J     L
//          :     :
//         J       L
//         :       :
//         `._____.'
//


// ==== Standard POV-Ray Includes ====
#include "colors.inc"	// Standard Color definitions
#include "textures.inc"	// Standard Texture definitions
#include "skies.inc"
 
global_settings {max_trace_level 10}

#declare camera_location = <-17, -14, -30>;
#declare camera_look_at = <2, -2, 0>;


camera
{
  location  camera_location
  look_at   camera_look_at
}


// create a regular point light source
light_source
{
  0*x // light's position (translated below)
  color red 0.1  green 1.0  blue 1.0  // light's color
  translate <-200, 100, -200>
}
light_source
{
  0*x // light's position (translated below)
  color red 0.1  green 1.0  blue 1.0  // light's color
  translate <200, 100, -200>
}
// create a regular point light source
light_source
{
  0*x // light's position (translated below)
  color rgb 0.8  // light's color
  translate camera_location + <-20, 100, -50>
}  


background {rgb<0.95, 0.95, 1>}
sky_sphere {S_Cloud5}


      
plane { y, -15
        texture{ pigment{color rgb<0.35,0.65,0.0>}
                 normal {bumps 0.75 scale 0.015}
               } // end of texture
      } // end of plane            



blob{threshold 0.5
#declare N = 0;
#while (N < 360)
sphere{<0, 0, 0>, 1, 1.05
        pigment{ gradient y  pigment_map
                {[0 onion color_map{[0 rgb<1, 0, 0>]
                                    [1 rgb<0, 1, 0>]}]
                 [1 onion color_map{[0 rgb<1, 1, 0>]
                                    [1 rgb<0, 0, 1>]}]
                }
                scale <1, 2, 1> translate<0, -1, 0>}
        finish{phong 0.3 phong_size 5}
                scale <2, 6.5, 2> rotate<0, 0, N/2> translate<-15, 0, 0> rotate<0, N, 0>}
#declare N = N + 1.5;
#end
rotate<-10, 30, 0> translate<0, 2, 0>}
  
  
  
  
  
                           
// TREE


// TREE


// TREE  
  
  
  


#declare w6=0;
#declare w5=30;
#declare w4=-70;
#declare w3=100;
#declare w2=-150;

#declare ww6=w6;
#declare ww5=w5;
#declare ww4=w4;
#declare ww3=w3;
#declare ww2=w2;

#declare i=0;

#macro tribe()

#declare i=i+1;

#if (i<6)
    tribe()
    tribe()
#end

cylinder{<0,0,0>,<0,1,0>,0.2,1.0 pigment{color rgb<0.99-i*0.05,0.35+i*0.08,0.35>}

         #if(i>5)
            scale <0.5,1.5,0.5>
            rotate <60,w6,0>
            translate y*1
         #end 
         #if(i>4)
            scale <0.8,1.0,0.8>
            rotate <60,w5,0>
            translate y*1
         #end            
         #if(i>3)
             scale <0.8,0.8,0.8>
             rotate <50,w4,0>
             translate y*1
         #end             
         #if(i>2)
             scale <0.7,0.7,0.7>
             rotate <40,w3,0>
             translate y*1
         #end             
         #if(i>1)
             scale <0.6,0.6,0.6>
             rotate <50,w2,0>
             translate y*1
         #end
         normal{granite 0.3 scallop_wave  scale 0.6}
         }
#if(i=6)#declare w6=w6+120;#end
#if(i=5)#declare w5=w5+120;#end
#if(i=4)#declare w4=w4+120;#end
#if(i=3)#declare w3=w3+120;#end
#if(i=2)#declare w2=w2+180;#end

#declare i=i-1;
#end


//////////////////////////////
#macro leaves()

#declare i=i+1;

#if (i<6)
    leaves()
    leaves()
#end

#if(i=6)sphere{<0,0,0>,0.8 pigment{bozo scale 0.1 color_map{[0.25 color rgb<0.5,0.6,0.4>][0.35 color rgbt 1]}}
         scale<3,1,3>scale 0.7 translate y*1
         #if(i>5)
            scale <0.5,1.5,0.5>
            rotate <60,ww6,0>
            translate y*1
         #end 
         #if(i>4)
            scale <0.8,1.0,0.8>
            rotate <60,ww5,0>
            translate y*1
         #end            
         #if(i>3)
             scale <0.8,0.8,0.8>
             rotate <50,ww4,0>
             translate y*1
         #end             
         #if(i>2)
             scale <0.7,0.7,0.7>
             rotate <40,ww3,0>
             translate y*1
         #end             
         #if(i>1)
             scale <0.6,0.6,0.6>
             rotate <50,ww2,0>
             translate y*1
         #end
         normal{spotted 0.5  scale 0.02}
         }
#end
         
#if(i=6)#declare ww6=ww6+120;leaves()#end
#if(i=5)#declare ww5=ww5+120;#end
#if(i=4)#declare ww4=ww4+120;#end
#if(i=3)#declare ww3=ww3+120;#end
#if(i=2)#declare ww2=ww2+180;#end

#declare i=i-1;

#end


#declare tree=
union
{
  blob
  {
    threshold 0.3
    tribe()
  }
  #declare i=0;
  leaves()
  scale 4
  translate <0 0 -15>
}
////////////////////////////////
////////////////////////////////

object{tree}  
